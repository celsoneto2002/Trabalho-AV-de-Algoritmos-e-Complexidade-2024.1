#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void insertionSort(int arr[], int n) {
    int i, key, j;
    for (i = 1; i < n; i++) {
        key = arr[i];
        j = i - 1;

        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}

int main() {
    int *arr;
    int n = 1000; 
    int i, j;
    clock_t start, end;
    double cpu_time_used;

    for (j = 0; j < 4; j++) { 
        arr = (int *)malloc(n * sizeof(int));

        
        srand(time(NULL));
        for (i = 0; i < n; i++) {
            arr[i] = rand();
        }

        
        start = clock();
        insertionSort(arr, n);
        end = clock();
        cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;
        printf("Insertion Sort para vetor de tamanho %d: %f segundos\n", n, cpu_time_used);

        free(arr);

        
        n *= 10;
    }

    return 0;
}
